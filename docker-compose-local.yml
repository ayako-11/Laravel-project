services:
    https-portal:
        image: steveltn/https-portal:1
        ports:
            - '443:443'
        networks:
            - sail
        volumes:
            - './certs:/var/lib/https-portal'
            - './docker/local/8.2/https-portal-nginx.conf:/etc/nginx/conf.d'
        environment:
            STAGE: 'local'
            DOMAINS: '${APP_DOMAIN_NAME:-localhost} -> http://laravel'
            CLIENT_MAX_BODY_SIZE: 100M
    laravel:
        build:
            context: ./docker/local/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - pgsql
            - redis
            - mailpit
    # Local環境ではサービスを用意してqueue:listen でワーカーを立ち上げる。
    # staging/production ではsupervisor等を利用してワーカーを起動、管理するよう注意。
    queue_worker:
        build:
            context: ./docker/local/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        working_dir: /var/www/html
        entrypoint:
            - php
            - artisan
            - queue:listen
        restart: unless-stopped
    pgsql:
        image: 'postgres:15'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DC_DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DC_DB_DATABASE}'
            POSTGRES_USER: '${DC_DB_USERNAME}'
            POSTGRES_PASSWORD: '${DC_DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DC_DB_DATABASE}'
                - '-U'
                - '${DC_DB_USERNAME}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-redis:
        driver: local
